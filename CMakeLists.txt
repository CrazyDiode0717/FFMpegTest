cmake_minimum_required(VERSION 3.13.2)

include(tools/cmake/find_src.cmake)
include(tools/cmake/project_helper.cmake)

set_property(GLOBAL PROPERTY USE_FOLDERS On)
set (PROJECT_NAME FFMpegTest)
project(${PROJECT_NAME} VERSION 0.0.1)

set(CMAKE_C_STANDARD 11) #-stdc11 gnuc11
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 11) #-stdc++11
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE ON) #-fPIC
message(STATUS "CMAKE_SYSTEM=${CMAKE_SYSTEM}")
message(STATUS "CMAKE_CONFIGURATION_TYPES=${CMAKE_CONFIGURATION_TYPES}")
message(STATUS "CMAKE_C_COMPILER_ID=${CMAKE_C_COMPILER_ID}")
message(STATUS "CMAKE_CXX_COMPILER_ID=${CMAKE_CXX_COMPILER_ID}")
message(STATUS "CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
message(STATUS "CMAKE_PROJECT_VERSION=${CMAKE_PROJECT_VERSION}")

set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output)
set(INCLUDE_PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/source)
set(EXTERN_PACKAGE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/tools/cmake)

#rpath
if(UNIX)
    if(APPLE)
        set(CMAKE_MACOSX_RPATH 0)
    else()
        set(CMAKE_INSTALL_RPATH "$ORIGIN")
    endif()
endif()

set(CMAKE_VERBOSE_MAKEFILE ON)

# configure project
set(SUB_DIRECTORYS 
    "source/VXFFMpeg"
    "source/TestDemo"
)

foreach(SUB_DIRECTORY ${SUB_DIRECTORYS})
    add_subdirectory(${SUB_DIRECTORY})
endforeach()

#package configure
set(CPACK_GENERATOR "TGZ")
set(CPACK_INSTALL_PREFIX "/")
set(CPACK_OUTPUT_FILE_PREFIX  ${CMAKE_SOURCE_DIR}/build)
set(CPACK_PACKAGE_NAME "VXFFMpeg")# 设置包名字
set(CPACK_PACKAGE_VERSION ${CMAKE_PROJECT_VERSION})# 这是生成的安装的版本号信息
set(CPACK_RPM_PACKAGE_GROUP "sobey")
set(CPACK_PACKAGE_VENDOR "sobey")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "sobey")
set(CPACK_SET_DESTDIR true)
#set(CPACK_PACKAGE_DESCRIPTION "")
#set(CPACK_PACKAGE_DESCRIPTION_SUMMARY, "")
#set(CPACK_RPM_PACKAGE_LICENSE "GPL + LGPL2.1")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_BUILD_TYPE}")
include(CPack)
